{"version":3,"sources":["App.js","index.js"],"names":["Calc","useState","ipString","setIpString","mask","setMask","maskResult","setMaskResult","hosts","setHosts","broadcast","setBroadcast","address","setAddress","mode","top","type","placeholder","value","onChange","e","target","readOnly","size","onClick","magicNumber","octMagicNumber","maskBitLength","ip","split","Math","pow","notFullOct","fullOct","i","join","calcMaskResult","length","console","log","addressOct","broadcastOct","octMagicIP","calcAddresses","App","viewWidth","useAdaptivity","header","separator","spaced","ViewWidth","MOBILE","activePanel","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea1e903e.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {Button, FormItem, FormLayout, FormLayoutGroup, Input} from \"@vkontakte/vkui\";\n\nconst Calc = () => {\n    const [ ipString, setIpString ] = useState('');\n    const [ mask, setMask ] = useState('');\n    const [ maskResult, setMaskResult ] = useState('');\n    const [ hosts, setHosts ] = useState(0);\n    const [ broadcast, setBroadcast] = useState('');\n    const [ address, setAddress ] = useState('')\n\n    const calcAddresses =(mask, ipString)=>{\n        const maskBitLength = [0, 128, 192, 224, 240, 248, 252, 254, 255]\n        let maskResult = [];\n        let ip = ipString.split('.');\n\n        //Расчёт количества адресов\n        setHosts(Math.pow(2, 32 - mask));\n\n        //Расчёт маски\n        const calcMaskResult = () => {\n            let notFullOct = mask % 8;\n            let fullOct = (mask - notFullOct) / 8;\n            for (let i = 0; i < 4; i++) {\n                if (fullOct !== 0) {\n                    maskResult[i] = 255;\n                    fullOct -= 1;\n                } else {\n                    maskResult[i] = maskBitLength[notFullOct];\n                    notFullOct = 0;\n                }\n            }\n            setMaskResult(maskResult.join('.'));\n        };\n\n        calcMaskResult();\n\n        //Адрес сети и широковещательный адрес\n        let magicNumber;\n        let octMagicNumber;\n        for (let i = 0; i < maskResult.length; i++) {\n            if (maskResult[i] !== 255 && maskResult[i] !== 0) {\n                magicNumber = 256 - maskResult[i];\n                octMagicNumber = i;\n                console.log(`Магическое число: ${magicNumber}`);\n            } else if (!magicNumber) {\n                magicNumber = 0;\n                octMagicNumber = -1;\n                console.log(`Магическое число: ${magicNumber}`);\n            }\n        }\n\n        if (magicNumber !== 0 && octMagicNumber !== -1){\n            const octMagicIP = ip[octMagicNumber];\n            let addressOct;\n            let broadcastOct;\n            for (let i = 0; i <= 255; i += magicNumber) {\n                if ( octMagicIP >= i\n                    && octMagicIP < (i + magicNumber)\n                    && (i + magicNumber < 256)\n                ) {\n                    addressOct = i;\n                    broadcastOct = i;\n                }\n            }\n\n            //Нахождение адреса сети\n            let address = [];\n\n            for (let i = 0; i < ip.length; i++) {\n                if (maskResult[i] === 255) {\n                    address[i] = ip[i];\n                } else {\n                    address[i] = addressOct;\n                    addressOct = 0;\n                }\n            }\n            console.log(address)\n            setAddress(address.join('.'));\n\n            //Нахождение широковещательного адреса\n            let broadcast = [];\n\n            for (let i = 0; i < ip.length; i++) {\n                if (maskResult[i] === 255) {\n                    broadcast[i] = ip[i];\n                } else {\n                    if (broadcastOct + magicNumber < 256){\n                        broadcast[i] = broadcastOct + magicNumber - 1;\n                        broadcastOct = 255;\n                    } else {\n                        broadcast[i] = 255;\n                    }\n                }\n            }\n            setBroadcast(broadcast.join('.'))\n        } else {\n            //Адрес сети\n            let address = [];\n            for (let i = 0; i < ip.length; i++) {\n                if (maskResult[i] === 255) {\n                    address[i] = ip[i];\n                } else {\n                    address[i] = 0;\n                }\n            }\n            console.log(address)\n            setAddress(address.join('.'));\n\n            //Широковещательный адрес\n            let broadcast = [];\n            for (let i = 0; i < ip.length; i++) {\n                if (maskResult[i] === 255) {\n                    broadcast[i] = ip[i];\n                } else {\n                    broadcast[i] = 255;\n                }\n            }\n            setBroadcast(broadcast.join('.'))\n        }\n    };\n\n    return (\n        <>\n            <FormLayout>\n                <FormLayoutGroup mode={'horizontal'}>\n                    <FormItem top={'IP-адрес'}>\n                        <Input\n                            type=\"text\"\n                            placeholder={'192.212.23.76'}\n                            value={ipString}\n                            onChange={(e)=> setIpString(e.target.value)}\n                            />\n                    </FormItem>\n                    <FormItem top={'Маска'}>\n                        <Input\n                            type=\"text\"\n                            placeholder={'25'}\n                            value={mask}\n                            onChange={(e)=> setMask(e.target.value)}\n                        />\n                    </FormItem>\n                </FormLayoutGroup>\n                <FormLayoutGroup mode={'horizontal'}>\n                    <FormItem top={'Маска'}>\n                        <Input\n                            type=\"text\"\n                            placeholder={'255.255.255.255'}\n                            value={maskResult}\n                            readOnly\n                        />\n                    </FormItem>\n                    <FormItem top={'Колличество адресов'}>\n                        <Input\n                            type=\"text\"\n                            placeholder={'928'}\n                            value={hosts}\n                            readOnly\n                        />\n                    </FormItem>\n                </FormLayoutGroup>\n                <FormLayoutGroup mode={'horizontal'}>\n                    <FormItem top={'Адрес сети'}>\n                        <Input\n                            type=\"text\"\n                            placeholder={'255.255.255.255'}\n                            value={address}\n                            readOnly\n                        />\n                    </FormItem>\n                    <FormItem top={'Широковещательный адрес'}>\n                        <Input\n                            type=\"text\"\n                            placeholder={'255.255.255.255'}\n                            value={broadcast}\n                            readOnly\n                        />\n                    </FormItem>\n                </FormLayoutGroup>\n                <FormItem>\n                    <Button\n                        size={'l'}\n                        onClick={()=>{\n                            calcAddresses(mask, ipString);\n                        }}\n                    >\n                        Рассчитать\n                    </Button>\n                </FormItem>\n            </FormLayout>\n        </>\n    );\n}\n\nexport default Calc;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n    AdaptivityProvider,\n    ConfigProvider,\n    useAdaptivity,\n    AppRoot,\n    SplitLayout,\n    SplitCol,\n    ViewWidth,\n    View,\n    Panel,\n    PanelHeader,\n    Group,\n} from \"@vkontakte/vkui\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport Calc from \"./App\";\n\nconst App = () => {\n    const { viewWidth } = useAdaptivity();\n\n    return (\n        <AppRoot>\n            <SplitLayout header={<PanelHeader separator={false} />}>\n                <SplitCol spaced={viewWidth && viewWidth > ViewWidth.MOBILE}>\n                    <View activePanel=\"main\">\n                        <Panel id=\"main\">\n                            <PanelHeader>IP Калькулятор ЭПИ-21</PanelHeader>\n                            <Group>\n                                <Calc/>\n                            </Group>\n                        </Panel>\n                    </View>\n                </SplitCol>\n            </SplitLayout>\n        </AppRoot>\n    );\n};\n\nReactDOM.render(\n    <ConfigProvider>\n        <AdaptivityProvider>\n            <App />\n        </AdaptivityProvider>\n    </ConfigProvider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}